// <auto-generated />
using System;
using MUCPC.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace mucpc.Infrastructure.Migrations
{
    [DbContext(typeof(mucpcDbContext))]
    partial class mucpcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentWorkShop", b =>
                {
                    b.Property<long>("StudentsUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkshopsId")
                        .HasColumnType("bigint");

                    b.HasKey("StudentsUserId", "WorkshopsId");

                    b.HasIndex("WorkshopsId");

                    b.ToTable("StudentWorkShop");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Form", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EvaluationForm")
                        .HasColumnType("bit");

                    b.Property<bool>("RegistrationForm")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("WorkShopId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WorkShopId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.FormQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FormId")
                        .HasColumnType("bigint");

                    b.Property<string>("Options")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FormQuestions");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.FormResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FormId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("StudentId");

                    b.ToTable("FormResponses");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Instructor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("YearsOfExpertise")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.QuestionResponse", b =>
                {
                    b.Property<long>("FormQuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("FormResponseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormQuestionId", "FormResponseId");

                    b.HasIndex("FormResponseId");

                    b.ToTable("QuestionsResponses");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.RegisterRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FormResponseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkShopId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FormResponseId");

                    b.HasIndex("StudentId");

                    b.HasIndex("WorkShopId");

                    b.ToTable("RegisterRequests");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Student", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Faculty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.WorkShop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("AcedemicYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InstructorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MaxNumberOfAttendees")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NumberOfHours")
                        .HasColumnType("int");

                    b.Property<string>("Objectives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("RegistrationLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speaker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetedFaculties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("WorkShops");
                });

            modelBuilder.Entity("StudentWorkShop", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mucpc.Domain.Entities.WorkShop", null)
                        .WithMany()
                        .HasForeignKey("WorkshopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mucpc.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Form", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.WorkShop", "WorkShop")
                        .WithMany()
                        .HasForeignKey("WorkShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkShop");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.FormQuestion", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.FormResponse", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.Form", "Form")
                        .WithMany("FormResponses")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mucpc.Domain.Entities.Student", "Student")
                        .WithMany("FormResponses")
                        .HasForeignKey("StudentId");

                    b.Navigation("Form");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.QuestionResponse", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.FormQuestion", "FormQuestion")
                        .WithMany("QuestionResponses")
                        .HasForeignKey("FormQuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mucpc.Domain.Entities.FormResponse", "FormResponse")
                        .WithMany("QuestionsResponses")
                        .HasForeignKey("FormResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormQuestion");

                    b.Navigation("FormResponse");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.RegisterRequest", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.FormResponse", "FormResponse")
                        .WithMany()
                        .HasForeignKey("FormResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mucpc.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("mucpc.Domain.Entities.WorkShop", "WorkShop")
                        .WithMany("RegisterRequests")
                        .HasForeignKey("WorkShopId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FormResponse");

                    b.Navigation("Student");

                    b.Navigation("WorkShop");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Student", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.WorkShop", b =>
                {
                    b.HasOne("mucpc.Domain.Entities.Instructor", "Instructor")
                        .WithMany("WorkShops")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Form", b =>
                {
                    b.Navigation("FormResponses");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.FormQuestion", b =>
                {
                    b.Navigation("QuestionResponses");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.FormResponse", b =>
                {
                    b.Navigation("QuestionsResponses");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Instructor", b =>
                {
                    b.Navigation("WorkShops");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.Student", b =>
                {
                    b.Navigation("FormResponses");
                });

            modelBuilder.Entity("mucpc.Domain.Entities.WorkShop", b =>
                {
                    b.Navigation("RegisterRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
